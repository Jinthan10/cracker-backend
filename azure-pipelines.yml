trigger:
- master   # Your source code branch

pool:
  vmImage: ubuntu-latest

variables:
  ACR_NAME: 'backendapli'              # Your ACR name
  IMAGE_NAME: 'backendapp'             # Docker image name
  TAG: 'latest'                        # Docker tag

stages:

# Stage — Build and Push
- stage: Build
  displayName: 'Build & Push Docker Image'
  jobs:
  - job: BuildJob
    displayName: 'Build and Push'
    steps:

    # Step 1 — Login to Azure
    - task: AzureCLI@2
      displayName: 'Login to Azure'
      inputs:
        azureSubscription: 'mypip'   # Your Azure subscription service connection
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          echo "Checking Azure account..."
          az account show

    # Step 2 — Login to ACR
    - task: AzureCLI@2
      displayName: 'Login to Azure Container Registry'
      inputs:
        azureSubscription: 'mypip'
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          az acr login --name $ACR_NAME

    # Step 3 — Build & Push Docker Image
    - task: Docker@2
      displayName: 'Build and Push Docker Image'
      inputs:
        containerRegistry: 'mypip1'   # Use your **ACR service connection name**
        repository: $(ACR_NAME).azurecr.io/$(IMAGE_NAME)
        command: buildAndPush
        dockerfile: cracker-backend/Dockerfile   # Update path if Dockerfile is inside folder
        tags: |
          $(TAG)
